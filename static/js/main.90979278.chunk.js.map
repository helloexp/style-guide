{"version":3,"sources":["serviceWorker.js","store/reducers/reducers.js","store/index.js","components/PageTemplates/Error.js","components/Nav/Header.js","components/PageTemplates/Footer.js","components/PageTemplates/PageTemplate.js","components/Nav/SideNav.js","components/PageTemplates/ContentTemplate.js","components/PageTemplates/Pages/Home.js","components/PageTemplates/Pages/Admin.js","components/PageTemplates/Pages/Components.js","components/PageTemplates/Pages/StyleRef.js","components/PageTemplates/Pages/Colors.js","components/Text/Text.js","routes/index.js","index.js"],"names":["Boolean","window","location","hostname","match","reducers","rehydrated","state","arguments","length","undefined","type","config","key","storage","blacklist","reducer","persistCombineReducers","middleware","thunk","configureStore","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","apply","Error","react_default","a","createElement","Jumbotron","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","isOpen","setState","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","Input","style","width","placeholder","Component","Footer","height","margin","PageTemplate","Container","fluid","Header_Header","marginTop","marginBottom","minHeight","children","PageTemplates_Footer","SideNav","vertical","disabled","ContentTemplate","Row","Col","sm","SideNav_SideNav","Home","Link","to","Card","Components","PageTemplates_ContentTemplate","Layout","StyleRef","ColorsPage","text","Routes","Switch","Route","exact","path","render","PageTemplates_PageTemplate","Pages_Home","Pages_Components","Pages_StyleRef","Colors","assign","Text","Admin","PageTemplates_Error","rootElement","document","getElementById","ReactDOM","es","BrowserRouter","routes","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.90979278.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const rehydrated = (state = false, action) => {\r\n    switch (action.type) {\r\n      case 'persist/REHYDRATE':\r\n        return true;\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export default {\r\n      rehydrated\r\n  }","/* global window */\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { persistStore, persistCombineReducers } from 'redux-persist';\r\nimport storage from 'redux-persist/es/storage'; // default: localStorage if web, AsyncStorage if react-native\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers/reducers';\r\n\r\n// Redux Persist config\r\n// Change the redux persist blacklist to control what is stored in local storage\r\nconst config = {\r\n  key: 'root',\r\n  storage,\r\n  blacklist: ['status'],\r\n};\r\n\r\nconst reducer = persistCombineReducers(config, reducers);\r\n\r\nconst middleware = [thunk];\r\n\r\nconst configureStore = () => {\r\n  const store = createStore(\r\n    reducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n    compose(applyMiddleware(...middleware)),\r\n  );\r\n\r\n  return {  store };\r\n};\r\n\r\nexport default configureStore;","import React from 'react';\r\nimport {Jumbotron} from 'reactstrap';\r\n\r\nconst Error = () => {\r\n    return (\r\n        <Jumbotron>\r\n            <h1>Oops! Page does not exist</h1>\r\n        </Jumbotron>\r\n\r\n    )\r\n}\r\n\r\nexport default Error;","import React, {Component} from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n\r\n  Input} from 'reactstrap';\r\n  \r\n\r\nexport default class Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div >\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <NavbarBrand href=\"/\">Uniqlo Style Guide</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n            <NavLink href=\"/components\">\r\n              Components\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink href=\"/style\">\r\n              Style\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink href=\"/colors\">\r\n              Colors\r\n            </NavLink>\r\n          </NavItem>\r\n          <Input style={{ width: \"250px\"}} placeholder=\"Search\"/>\r\n          </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\n\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <div style={{height: \"40px\"}} >\r\n            <p className=\"text-center flex flex-center\" style={{margin:\"0\"}}>All Rights Reserved </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Footer;","import React from 'react';\r\nimport {Container} from 'reactstrap';\r\nimport Header from '../Nav/Header';\r\nimport Footer from '../PageTemplates/Footer';\r\n\r\n\r\n\r\nconst PageTemplate = (props) => {\r\n  return (\r\n    <Container fluid style={{}}>\r\n      <Header />\r\n      <Container style={{ marginTop:\"40px\", marginBottom: \"50px\",minHeight: \"calc(100vh - 187px)\"}}>\r\n        {props.children}\r\n      </Container>\r\n      <Footer />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default PageTemplate;","import React, {Component} from 'react';\r\nimport { Nav, NavItem, NavLink } from 'reactstrap';\r\n\r\nexport default class SideNav extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"sidebar-nav\">\r\n        <Nav vertical>\r\n          <NavItem>\r\n            <NavLink href=\"#\">Link</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink href=\"#\">Link</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink href=\"#\">Another Link</NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n        <hr />\r\n        <p>Link based</p>\r\n        <Nav vertical>\r\n          <NavLink href=\"#\">Link</NavLink> <NavLink href=\"#\">Link</NavLink> <NavLink href=\"#\">Another Link</NavLink> <NavLink disabled href=\"#\">Disabled Link</NavLink>\r\n        </Nav>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport {Row, Col} from 'reactstrap';\r\nimport SideNav from '../Nav/SideNav';\r\n\r\nconst ContentTemplate = (props) =>{\r\n\r\n        return(\r\n            <Row style={{marginTop: \"50px\", height: \"100vh\"}}>\r\n            <Col sm={9}>\r\n                {props.children}\r\n            </Col>\r\n            <Col sm={3}>\r\n              <SideNav />\r\n            </Col>\r\n          </Row>\r\n        )\r\n}\r\n\r\nexport default ContentTemplate;","import React from 'react';\r\nimport {Jumbotron, Col, Row, Card} from 'reactstrap';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Home = () => {\r\n    return(\r\n        <div>\r\n            <Jumbotron>\r\n                <h1>Style Guide</h1>\r\n            </Jumbotron>\r\n            <div className=\"section-divide\">\r\n                <h3>\r\n                    Download Style Assets\r\n                </h3>\r\n                <button>Default Stylesheet</button>\r\n                <button>Desktop Stylesheet</button>\r\n                <button>Mobile Stylesheet</button>\r\n            </div>\r\n            <div className=\"section-divide\">\r\n                <h3>\r\n                    Quick Guide\r\n                </h3>\r\n                <Row>\r\n                    <Col sm={4} >\r\n                        <Link to=\"/components\">\r\n                            <Card className=\"flex flex-center\">\r\n                                    <h5 className=\"text-center\">Components</h5>\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                        <Link to=\"/style\">\r\n                            <Card className=\"flex flex-center\">\r\n                                <h5 className=\"text-center\">Style Reference</h5>\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                        <Link to=\"/colors\">\r\n                            <Card className=\"flex flex-center\">\r\n                                <h5 className=\"text-center \">Colors</h5>\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport {Jumbotron, Form, Input} from 'reactstrap';\r\nimport ContentTemplate from '../ContentTemplate';\r\n\r\n\r\nconst Components = (props) => {\r\n    return (\r\n        <div>\r\n            <Jumbotron>\r\n                <h1>Admin Dashboard</h1>\r\n            </Jumbotron>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Components;","import React from 'react';\r\nimport {Jumbotron} from 'reactstrap';\r\nimport ContentTemplate from '../ContentTemplate';\r\n\r\n\r\nconst Components = (props) => {\r\n    return (\r\n        <div>\r\n            <Jumbotron>\r\n                <h1>Components</h1>\r\n            </Jumbotron>\r\n            <ContentTemplate>\r\n                {props.Layout ? props.Layout :\r\n                    <div>\r\n                        <h1>Basic Snippets</h1>\r\n                        <p>Most popular items</p>\r\n                    </div>\r\n                \r\n                }\r\n            </ContentTemplate>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Components;","import React from 'react';\r\nimport {Jumbotron} from 'reactstrap'\r\nimport ContentTemplate from '../ContentTemplate';\r\n\r\nconst StyleRef = (props) => {\r\n    return (\r\n        <div>\r\n            <Jumbotron>\r\n                <h1>CSS Style</h1>\r\n            </Jumbotron>\r\n            <ContentTemplate>\r\n                {props.Layout ? props.Layout :\r\n                    <div>\r\n                        <h1>Basic Snippets</h1>\r\n                        <p>Most popular items</p>\r\n                    </div>\r\n                \r\n                }\r\n            </ContentTemplate>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleRef;","import React from 'react';\r\nimport {Jumbotron} from 'reactstrap'\r\nimport ContentTemplate from '../ContentTemplate';\r\n\r\n\r\nconst ColorsPage = (props) => {\r\n    return (\r\n        <div>\r\n            <Jumbotron>\r\n                <h1>Colors</h1>\r\n            </Jumbotron>\r\n            <ContentTemplate>\r\n                {props.Layout ? props.Layout :\r\n                    <div>\r\n                        <h1>Basic Snippets</h1>\r\n                        <p>Most popular items</p>\r\n                    </div>\r\n                \r\n                }\r\n            </ContentTemplate>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColorsPage;","import React from 'react'\r\n\r\n\r\nconst text = () => {\r\n    return(\r\n        <div>\r\n        <h1 className=\"bold\">Text Styles</h1>\r\n        <h3>Headers</h3>\r\n        <div className='display-container'>\r\n            <h1>Heading {`<h1>`} - 36px </h1>\r\n            <h2>Heading {`<h2>`} - 32px </h2>\r\n            <h3>Heading {`<h3>`} - 28px </h3>\r\n            <h4>Heading {`<h4>`} - 24px</h4>\r\n            <h5>Heading {`<h5>`} - 20px </h5>\r\n            <h6>Heading {`<h6>`} - 16px </h6>\r\n        </div>\r\n      \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default text;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n// Templates\r\nimport Error from '../components/PageTemplates/Error'\r\nimport PageTemplate from '../components/PageTemplates/PageTemplate';\r\nimport ContentTemplate from '../components/PageTemplates/ContentTemplate'\r\n\r\n//Pages\r\nimport HomePage from '../components/PageTemplates/Pages/Home';\r\nimport AdminPage from '../components/PageTemplates/Pages/Admin'\r\nimport ComponentsPage from '../components/PageTemplates/Pages/Components';\r\nimport StyleRefPage from '../components/PageTemplates/Pages/StyleRef';\r\nimport ColorsPage from '../components/PageTemplates/Pages/Colors';\r\n\r\n\r\n// Components\r\nimport Text from '../components/Text/Text';\r\n\r\n\r\n\r\nconst Routes = () => (\r\n    <Switch>\r\n        <Route\r\n            exact\r\n            path=\"/\"\r\n            render={props => (\r\n                <PageTemplate>\r\n                    <HomePage {...props}/>\r\n                </PageTemplate>\r\n            )}\r\n        />\r\n        <Route\r\n            exact\r\n            path=\"/components\"\r\n            render={props => (\r\n                <PageTemplate>\r\n                    <ComponentsPage {...props}/>\r\n                </PageTemplate>\r\n            )}\r\n        />\r\n        <Route\r\n            exact\r\n            path=\"/style\"\r\n            render={props => (\r\n                <PageTemplate>\r\n                    <StyleRefPage {...props}/>\r\n                </PageTemplate>\r\n            )}\r\n        />\r\n        <Route\r\n            exact\r\n            path=\"/colors\"\r\n            render={props => (\r\n                <PageTemplate>\r\n                    <ColorsPage {...props}/>\r\n                </PageTemplate>\r\n            )}\r\n        />\r\n        <Route\r\n            exact\r\n            path=\"/components/text\"\r\n            render={props => (\r\n                <PageTemplate>\r\n                        <ComponentsPage {...props} Layout={<Text/>}/>\r\n                </PageTemplate>\r\n            )}\r\n        />\r\n        <Route\r\n            exact\r\n            path=\"/admin\"\r\n            render={props => (\r\n                <PageTemplate>\r\n                    <AdminPage {...props}/>\r\n                </PageTemplate>\r\n            )}\r\n        />\r\n        <Route\r\n            render={props => (\r\n                <PageTemplate>\r\n                    <Error {...props}  />\r\n                </PageTemplate>\r\n            )}\r\n        />\r\n    </Switch>\r\n);\r\n\r\nexport default Routes;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/es/integration/react';\nimport configureStore from './store/index';\nimport Routes from './routes/index';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/app.scss';\nimport './styles/global/main.scss';\n\n\nconst {  store } = configureStore();\n// persistor.purge(); // Debug to clear persist\n\nconst rootElement = document.getElementById('root');\n\nconst Root = () => (\n    <Provider store={store}>\n        <Router>\n            <Routes />  \n        </Router>\n    </Provider>\n\n);\n\nReactDOM.render(<Root />, rootElement);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}